TODO - PLANTS
- nodes have children: nodes can have stalks or nodes as children
- cardinality: flowers/plants (branches based on divisibility of number - 2, 3, 4, 5, 6, 7, 8)
- concave/convex: nodes can have concave/convex sides
- let plant stalks drift (only b1,b2,top)
TODO - STARS
- distribute stars - less lower down
- color some stars randomly
- blink some stars

DONE:
- refactor to prep for fractal plants
- ensure z-order by sorting elements and adding back to front
- rotate flowers
- validate input number
- shorter plants "in back"
- size flowers based on plant height
- basic flowers
- vary number of plants
- increase number of stars in the sky nonlinearly/log with seed size
- plant stalks in small range of colors, complementary to BG
- plant stalks grow up over time to full height
- plant stalks
- make lower stars more transparent
- stars appear over time
- stars in the sky
- user number input
- background gradient

DECISIONS:
- upper limit on number


CONCEPT:
user enters a number
number is broken down into component characteristics, which are used to generate a landscape scene - size, order of magnitude, odd/even, divisibility, etc.

EXHIBITION IDEAS:
- enter your own number - throughout
- render the same seed across time, each git commit, or key stills thereof
- render various clusters of seeds, e.g. 1-10, 10,20,30,40,50, etc.
- give away digitally signed copy (usb + hash certificate ?)

SPIN-OFFS:
- fractal tree (single) creator with buttons/slides controls
- one plant with many stalks